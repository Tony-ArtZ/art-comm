import Head from "next/head";
import Hero from "../layouts/Hero";
import FeaturedFeed from "../layouts/featured";
import {
  createServerSupabaseClient,
  User
} from '@supabase/auth-helpers-nextjs';
import { GetServerSidePropsContext } from 'next';
import {useEffect} from "react";
import React from 'react'


export default function Home({ user, userData }: { user: User, userData:any }){
  
  useEffect(()=>{console.log(user)},[user])
  const test = (e:React.MouseEvent<HTMLButtonElement>)=>{
    e.preventDefault()
    console.log("hdh")
  }
  return (
    <>
      <Head>
        <title>ArtComm</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="w-screen overflow-hidden">
        <Hero user={user} userData={userData}/>
        <FeaturedFeed />
      </main>
    </>
  );
}

export const getServerSideProps = async (ctx: GetServerSidePropsContext) => {
  // Create authenticated Supabase Client
  const supabase = createServerSupabaseClient(ctx);
  // Check if we have a session
  const {
    data: { session }
  } = await supabase.auth.getSession();

  let userData = null

  if (!session)
    return {props:{user:null}};
  else {
  const { data, error } = await supabase
  .from('Users')
  .select()
  .eq('id', session.user.id)
  userData = data?.at(0)?data.at(0):null
  console.log(data, error)
  if(!userData){
    const updates = {
      id: session?.user.id,
      user_name: session?.user.user_metadata.name,
      profile_picture: session?.user.user_metadata.avatar_url
    };
    let { error } = await supabase.from('Users').upsert(updates)
    if(!error){
    /*return {
      redirect: {
        destination: '/',
        permanent: false
      }
      };*/

    }
  }
}

  return {
    props: {
      initialSession: session,
      user: session.user,
      userData: userData 
    }
  };
};
