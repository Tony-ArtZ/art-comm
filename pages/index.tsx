import Head from "next/head";
import Hero from "../layouts/Hero";
import FeaturedFeed from "../layouts/Featured";
import {
  createServerSupabaseClient,
  User
} from '@supabase/auth-helpers-nextjs';
import { GetServerSidePropsContext } from 'next';


export default function Home({ user, userData }: { user: User, userData:any }){
  return (
    <>
      <Head>
        <title>ArtComm</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="w-screen overflow-hidden">
        <Hero user={user} userData={userData}/>
        <FeaturedFeed />
      </main>
    </>
  );
}

export const getServerSideProps = async (ctx: GetServerSidePropsContext) => {
  // Create authenticated Supabase Client
  const supabase = createServerSupabaseClient(ctx);
  // Check if we have a session
  const {
    data: { session }
  } = await supabase.auth.getSession();

  let userData = null

  if (!session)
    return {props:{user:null}};
  else {
  const { data, error } = await supabase
  .from('Users')
  .select()
  .eq('id', session.user.id)
  userData = data
  console.log(data?.at(0)?.user_name)
  if(!data){
    const updates = {
      id: session?.user.id,
      user_name: session?.user.user_metadata.name,
      profile_picture: session?.user.user_metadata.avatar_url
    };
    let { error } = await supabase.from('Users').upsert(updates)
  }
}

  return {
    props: {
      initialSession: session,
      user: session.user,
      userData: userData?.at(0)    
    }
  };
};
