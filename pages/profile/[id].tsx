import Head from "next/head";
import {
  createServerSupabaseClient,
  User
} from '@supabase/auth-helpers-nextjs';
import { GetServerSidePropsContext } from 'next';
import {useRouter} from "next/router";
import Image from "next/image";

export default function Home({ user, userData }: { user: User, userData:any }){
  return (
    <>
      <Head>
        <title>ArtComm</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="w-screen overflow-hidden flex justify-center items-center">
      <div className="w-screen h-64 bg-secondary flex justify-center">
      <Image height="20" width="20" alt="profile" src={userData?.profile_picture} className="absolute ml-auto mr-auto rounded-full h-24 w-24 top-52 outline-8 drop-shadow-glow outline-primary outline" />
        <h1>{userData.user_name}</h1> 
      </div>
      </main>
    </>
  );
}

export const getServerSideProps = async (ctx: GetServerSidePropsContext) => {
  // Create authenticated Supabase Client
  const supabase = createServerSupabaseClient(ctx);
 // Check if we have a session
  const {
    data: { session }
  } = await supabase.auth.getSession();

  let userData = null

  if (!session)
    return {props:{user:null}};
  else {
  const { data, error } = await supabase
  .from('Users')
  .select()
  .eq('id', ctx?.params?.id)
  userData = data
}

return {
    props: {
      initialSession: session,
      user: session.user,
      userData: userData?.at(0)    
    }
  };
};

